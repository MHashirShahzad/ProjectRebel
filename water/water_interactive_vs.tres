[gd_resource type="VisualShader" load_steps=29 format=3 uid="uid://qpfqxa3rob07"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_txkud"]
parameter_name = "deep_water"
default_value_enabled = true
default_value = Color(0, 0.270588, 1, 1)

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_30ot0"]
parameter_name = "shallow_water"
default_value_enabled = true
default_value = Color(0, 0.741176, 1, 1)

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_wl7ge"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ifg7w"]
size = Vector2(472, 200)
expression = "vec3 duv = vec3(4.0 / 514.0, 4.0 / 514.0, 0);
float v1 = texture(sim, UV - duv.xz).y;
float v2 = texture(sim, UV + duv.xz).y;
float v3 = texture(sim, UV - duv.zy).y;
float v4 = texture(sim, UV + duv.zy).y;

normal = normalize(vec3(v1 - v2, v3 - v4, 0.3));"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ub3r4"]
parameter_name = "refraction_strength"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_kyolv"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_fafxn"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ll0vh"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_uo6b7"]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_oqmf6"]
parameter_name = "simulation"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_y1w0g"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_nktx1"]
default_input_values = [0, Vector3(0, 0, 0)]
port_type = 4

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_rcv0c"]

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_i3mr4"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_cyqqb"]
constant = 0.8

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_qw2l8"]
size = Vector2(700, 500)
expression = "float d = texture(depth_tex_frg_9, SCREEN_UV).r;
d = PROJECTION_MATRIX[3][2] / (d + PROJECTION_MATRIX[2][2]);
d = d + VERTEX.z;
depth = exp(-d * murkiness);"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_emcg7"]
parameter_name = "murkiness"
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_m3ity"]
function = 31

[sub_resource type="VisualShaderNodeLinearSceneDepth" id="VisualShaderNodeLinearSceneDepth_t6me0"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_nr7ib"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_p7483"]
parameter_name = "simulation2"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_bf5h0"]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_f5a8h"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_imj4r"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_b4kav"]
parameter_name = "amplitude"
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_p4m7a"]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_q7iyk"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_rx3kw"]
input_name = "vertex"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D simulation2;
uniform float amplitude = 0.5;
uniform float refraction_strength = 0;
uniform sampler2D simulation;
uniform vec4 deep_water : source_color = vec4(0.000000, 0.270588, 1.000000, 1.000000);
uniform vec4 shallow_water : source_color = vec4(0.000000, 0.741176, 1.000000, 1.000000);
uniform float murkiness = 0.5;
uniform sampler2D depth_tex_frg_9 : hint_depth_texture;



void vertex() {
// Input:9
	vec3 n_out9p0 = VERTEX;


// Input:7
	vec3 n_out7p0 = NORMAL;


// Input:3
	vec2 n_out3p0 = UV;


	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(simulation2, n_out3p0);
	float n_out4p1 = n_out4p0.r;


// FloatParameter:6
	float n_out6p0 = amplitude;


// FloatOp:5
	float n_out5p0 = n_out4p1 * n_out6p0;


// VectorOp:8
	vec3 n_out8p0 = n_out7p0 * vec3(n_out5p0);


// VectorOp:10
	vec3 n_out10p0 = n_out9p0 + n_out8p0;


// Output:0
	VERTEX = n_out10p0;


}

void fragment() {
// FloatParameter:15
	float n_out15p0 = refraction_strength;


	vec3 n_out14p0;
// Expression:14
	n_out14p0 = vec3(0.0, 0.0, 0.0);
	{
		vec3 duv = vec3(4.0 / 514.0, 4.0 / 514.0, 0);
		float v1 = texture(simulation, UV - duv.xz).y;
		float v2 = texture(simulation, UV + duv.xz).y;
		float v3 = texture(simulation, UV - duv.zy).y;
		float v4 = texture(simulation, UV + duv.zy).y;
		
		n_out14p0 = normalize(vec3(v1 - v2, v3 - v4, 0.3));
	}


// VectorOp:16
	vec3 n_out16p0 = vec3(n_out15p0) * n_out14p0;


// Input:17
	vec2 n_out17p0 = SCREEN_UV;


// VectorOp:18
	vec3 n_out18p0 = n_out16p0 + vec3(n_out17p0, 0.0);


	vec4 n_out19p0;
// Texture2D:19
	n_out19p0 = vec4(0.0);


// ColorParameter:11
	vec4 n_out11p0 = deep_water;


// ColorParameter:12
	vec4 n_out12p0 = shallow_water;


// FloatParameter:7
	float n_out7p0 = murkiness;


	float n_out9p0;
// LinearSceneDepth:9
	{
		float __log_depth = textureLod(depth_tex_frg_9, SCREEN_UV, 0.0).x;
	vec4 __depth_view = INV_PROJECTION_MATRIX * vec4(SCREEN_UV * 2.0 - 1.0, __log_depth, 1.0);
		__depth_view.xyz /= __depth_view.w;
		n_out9p0 = -__depth_view.z;
	}


	float n_out6p0;
// Expression:6
	n_out6p0 = 0.0;
	{
		float d = texture(depth_tex_frg_9, SCREEN_UV).r;
		d = PROJECTION_MATRIX[3][2] / (d + PROJECTION_MATRIX[2][2]);
		d = d + VERTEX.z;
		n_out6p0 = exp(-d * n_out7p0);
	}


// Mix:13
	vec3 n_out13p0 = mix(vec3(n_out11p0.xyz), vec3(n_out12p0.xyz), vec3(n_out6p0));


// FloatConstant:24
	float n_out24p0 = 0.800000;


// Mix:20
	vec3 n_out20p0 = mix(vec3(n_out19p0.xyz), n_out13p0, vec3(n_out24p0));


// FloatFunc:8
	float n_out8p0 = 1.0 - n_out6p0;


// Reroute:23
	float n_out23p0 = n_out8p0;


// Reroute:22
	float n_out22p0 = n_out23p0;


// Reroute:21
	vec3 n_out21p0 = n_out14p0;


// Output:0
	ALBEDO = n_out20p0;
	ALPHA = n_out22p0;
	NORMAL = n_out21p0;


}
"
nodes/vertex/0/position = Vector2(1460, 120)
nodes/vertex/2/node = SubResource("VisualShaderNodeTexture2DParameter_p7483")
nodes/vertex/2/position = Vector2(-206.116, 370.079)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_bf5h0")
nodes/vertex/3/position = Vector2(-266.116, 210.079)
nodes/vertex/4/node = SubResource("VisualShaderNodeTexture_f5a8h")
nodes/vertex/4/position = Vector2(193.884, 190.079)
nodes/vertex/5/node = SubResource("VisualShaderNodeFloatOp_imj4r")
nodes/vertex/5/position = Vector2(480, 280)
nodes/vertex/6/node = SubResource("VisualShaderNodeFloatParameter_b4kav")
nodes/vertex/6/position = Vector2(160, 480)
nodes/vertex/7/node = SubResource("VisualShaderNodeInput_p4m7a")
nodes/vertex/7/position = Vector2(449.297, 119.774)
nodes/vertex/8/node = SubResource("VisualShaderNodeVectorOp_q7iyk")
nodes/vertex/8/position = Vector2(780, 200)
nodes/vertex/9/node = SubResource("VisualShaderNodeInput_rx3kw")
nodes/vertex/9/position = Vector2(660, -40)
nodes/vertex/10/node = SubResource("VisualShaderNodeVectorOp_nr7ib")
nodes/vertex/10/position = Vector2(1000, 40)
nodes/vertex/connections = PackedInt32Array(3, 0, 4, 0, 2, 0, 4, 2, 4, 1, 5, 0, 6, 0, 5, 1, 5, 0, 8, 1, 7, 0, 8, 0, 9, 0, 10, 0, 8, 0, 10, 1, 10, 0, 0, 0)
nodes/fragment/0/position = Vector2(2240, -140)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_oqmf6")
nodes/fragment/2/position = Vector2(-420, -300)
nodes/fragment/6/node = SubResource("VisualShaderNodeExpression_qw2l8")
nodes/fragment/6/position = Vector2(-80, 780)
nodes/fragment/6/size = Vector2(700, 500)
nodes/fragment/6/input_ports = "0,0,murkiness;1,0,depth_texture;"
nodes/fragment/6/output_ports = "0,0,depth;"
nodes/fragment/6/expression = "float d = texture(depth_tex_frg_9, SCREEN_UV).r;
d = PROJECTION_MATRIX[3][2] / (d + PROJECTION_MATRIX[2][2]);
d = d + VERTEX.z;
depth = exp(-d * murkiness);"
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatParameter_emcg7")
nodes/fragment/7/position = Vector2(-406.425, 745.174)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatFunc_m3ity")
nodes/fragment/8/position = Vector2(666.175, 827.31)
nodes/fragment/9/node = SubResource("VisualShaderNodeLinearSceneDepth_t6me0")
nodes/fragment/9/position = Vector2(-360, 1040)
nodes/fragment/11/node = SubResource("VisualShaderNodeColorParameter_txkud")
nodes/fragment/11/position = Vector2(-100, 260)
nodes/fragment/12/node = SubResource("VisualShaderNodeColorParameter_30ot0")
nodes/fragment/12/position = Vector2(-120, 480)
nodes/fragment/13/node = SubResource("VisualShaderNodeMix_wl7ge")
nodes/fragment/13/position = Vector2(820, 380)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_ifg7w")
nodes/fragment/14/position = Vector2(120, -120)
nodes/fragment/14/size = Vector2(472, 200)
nodes/fragment/14/input_ports = "0,8,sim;"
nodes/fragment/14/output_ports = "0,4,normal;"
nodes/fragment/14/expression = "vec3 duv = vec3(4.0 / 514.0, 4.0 / 514.0, 0);
float v1 = texture(sim, UV - duv.xz).y;
float v2 = texture(sim, UV + duv.xz).y;
float v3 = texture(sim, UV - duv.zy).y;
float v4 = texture(sim, UV + duv.zy).y;

normal = normalize(vec3(v1 - v2, v3 - v4, 0.3));"
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatParameter_ub3r4")
nodes/fragment/15/position = Vector2(280, -520)
nodes/fragment/16/node = SubResource("VisualShaderNodeVectorOp_kyolv")
nodes/fragment/16/position = Vector2(720, -300)
nodes/fragment/17/node = SubResource("VisualShaderNodeInput_fafxn")
nodes/fragment/17/position = Vector2(850.111, -38.6136)
nodes/fragment/18/node = SubResource("VisualShaderNodeVectorOp_ll0vh")
nodes/fragment/18/position = Vector2(1180.31, -246.722)
nodes/fragment/19/node = SubResource("VisualShaderNodeTexture_uo6b7")
nodes/fragment/19/position = Vector2(1440, -200)
nodes/fragment/20/node = SubResource("VisualShaderNodeMix_y1w0g")
nodes/fragment/20/position = Vector2(1900, -180)
nodes/fragment/21/node = SubResource("VisualShaderNodeReroute_nktx1")
nodes/fragment/21/position = Vector2(660, 120)
nodes/fragment/22/node = SubResource("VisualShaderNodeReroute_rcv0c")
nodes/fragment/22/position = Vector2(2180, -100)
nodes/fragment/23/node = SubResource("VisualShaderNodeReroute_i3mr4")
nodes/fragment/23/position = Vector2(2060, 860)
nodes/fragment/24/node = SubResource("VisualShaderNodeFloatConstant_cyqqb")
nodes/fragment/24/position = Vector2(1551.29, 494.905)
nodes/fragment/connections = PackedInt32Array(7, 0, 6, 0, 6, 0, 8, 0, 9, 0, 6, 1, 11, 0, 13, 0, 12, 0, 13, 1, 6, 0, 13, 2, 2, 0, 14, 0, 15, 0, 16, 0, 14, 0, 16, 1, 16, 0, 18, 0, 17, 0, 18, 1, 18, 0, 19, 0, 19, 0, 20, 0, 14, 0, 21, 0, 21, 0, 0, 8, 22, 0, 0, 1, 8, 0, 23, 0, 23, 0, 22, 0, 13, 0, 20, 1, 24, 0, 20, 2, 20, 0, 0, 0)
